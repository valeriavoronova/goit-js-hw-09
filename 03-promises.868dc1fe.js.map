{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,kBAAkB,SAClCC,KAAMF,SAASC,kBAAkB,QACjCE,OAAQH,SAASC,kBAAkB,UACnCG,IAAKJ,SAASK,cAAc,WAK9B,SAASC,EAAcC,EAAUR,GACTS,KAAKC,SAAW,GAEpCC,QAAQC,IAAI,uBAAqBJ,QAAiBR,OAEjDW,QAAMC,IAAI,sBAAoBJ,QAAiBR,OAMpDO,EAAc,EAAG,MA4BfR,EAAKM,IAAIQ,iBAAiB,QAASN","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.getElementsByName('delay'),\n  step: document.getElementsByName('step'),\n  amount: document.getElementsByName('amount'),\n  btn: document.querySelector('button'),\n\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n};\n\n\n\ncreatePromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n\n\n// function createPromise(position, delay) {\n//   const step = Number(refs.step.value);\n  \n//     return new Promise((resolve) => {\n//       const shouldResolve = Math.random() > 0.3;\n//       for (let i = 0; i < Number(refs.amount.value); i += 1){\n//         position += 1;\n//       }\n//       setTimeout(() => {\n//         setInterval(() => {\n//           if (shouldResolve)\n//             resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n//           else\n//             console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//         }, step)\n//       }, delay)\n    \n//     })\n  \n  refs.btn.addEventListener('click', createPromise);\n//  refs.btnStart.addEventListener('click', timer.start);\n\n   // \n\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     \n//   } else {\n//    \n//   }\n// }\n\n// createPromise(2, 1500);\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["parcelRequire","$47d4ff9957288465$var$refs","delay","document","getElementsByName","step","amount","btn","querySelector","$47d4ff9957288465$var$createPromise","position","Math","random","console","log","addEventListener"],"version":3,"file":"03-promises.868dc1fe.js.map"}